Menu="Dashboard"
Icon="server"
---
<?php
require_once("/usr/local/emhttp/plugins/docker.folder/include/loadlist_edit.php");
require_once("/usr/local/emhttp/plugins/docker.folder/include/common.php");
?>

<script>

(async () => {
    folders = await read_folders()
    $( "<tbody id='docker_list_storage' style='display:none;'></tbody>" ).insertAfter( "#db-box3 > .docker_view" );
})();

async function apply_folder() {
    let folderNames = Object.keys(await folders)
    folderChildren = []
    
    for (const folderName of folderNames) {
        edit_folder_base(folderName)
    }

    dashboard_expanded()
}

function dashboard_expanded() {
    let folderNames = Object.keys(folders)
    for (const folderName of folderNames) {

        // dashboard_expanded
        if (folders[folderName]['dashboard_expanded']) {

            var spaces_template = `<span class="outer solid apps docker-folder-spacer-${folderName}"><span class="inner" style="margin-left: 42px;margin-bottom: 17px;"><span class=""></span><br><i class=""></i><span></span></span></span>`
            
            // add fake index to all
            var fakeIndex = 0
            $('tbody.docker_view > tr > td:nth-child(2)').children().each(function(){
                if($(this).hasClass('docker-folder-hide') == false) {
                    fakeIndex++
                    $(this).attr('fake-index', fakeIndex)
                }
            })

            // main logic
            $('tbody.docker_view > tr > td:nth-child(2)').children().each(function(i){
                if ($(this).hasClass(`docker-folder-parent-${folderName}`)) {
                    var addCountStart = 0
                    var addCountEnd = 0
                    var index = i+1

                    while (index == 0 || Number.isInteger(index/3) == false) {
                        addCountStart++
                        index++
                    }

                    index = index+folders[folderName]['children'].length
                    while (index == 0 || Number.isInteger(index/3) == false) {
                        addCountEnd++
                        index++
                    }

                    childrenMove(folderName)
                    $(`.docker-folder-child-${folderName}`).removeClass('docker-folder-hide')

                    // add spaces at start
                    for (i=1; i <= addCountStart; i++) {
                        $(spaces_template).insertAfter($(`.docker-folder-parent-${folderName}`))
                    }

                    // add spaces at end
                    for (i=1; i <= addCountEnd; i++) {
                        $(spaces_template).insertAfter($(`.docker-folder-child-${folderName}`).last())
                    }

                    // add line at start
                    $(`.docker-folder-child-${folderName}`).each(function(i){
                        if (i < 3) {
                            $(this).css('border-top', 'inset').css('margin-bottom', '16px')
                        }
                    })

                    // add line at end
                    var lastIndex = $(`.docker-folder-spacer-${folderName}`).last().index()
                    for(i=0; i < addCountEnd+3-addCountEnd; i++) {
                        $('tbody.docker_view > tr > td:nth-child(2)').children().eq(lastIndex-i).css('border-bottom', 'solid')
                    }
                }
            })
        }
    }
}

function childrenMove(folderName) {
    for (const folder of folders[folderName]['children'].reverse()) {
        $(`.docker-folder-child-${folderName}`).each(function() {
            if (folder== $(this).find("span.inner > span:first-child").text()) {
                $(this).insertAfter(`.docker-folder-parent-${folderName}`);
            }
        });
    }
}

</script>